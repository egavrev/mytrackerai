
Forget all what you did before, now you are Python Developer, as a Python developer with expertise in working with databases, you are asked to translate a high-level application design  into actual Python code and corresponding SQL queries for a client. Start with Database structure in SQL and database_init.py to initialize database, this script need to create DB structure.
next define app.py according with app structure and python streamlit library.


**Detailed High-Level Tech Design:**

Overall Application Structure:

- MainApp/
    - journal.py
    - self_development.py
    - summary.py
    - app.py
    - database.py
    - models.py

**File Descriptions:**

- **journal.py**: This file will contain all the functions and Streamlit components required to display and manage the journal entries. Key components would include the date picker, domain selection, sentiment selection, and text input for the entry description.

- **self_development.py**: This file will contain the code for the Self-Development section. Fields would include the date picker, self-development domain selection, topic selection based on the chosen domain, time spent input, and a text input for the event description.

- **summary.py**: This file will manage the Summary screen. It will have functions to fetch and process data from the database for both journal and self-development entries and display them in a user-friendly format.

- **app.py**: This is the main app file with Python and Streamlit code that controls navigation between the three main screens (Journal, Self-Development, Summary) and manages the overall UI of the app.

- **database.py**: This file will handle the database connections, queries, and other DB operations using SQLite. 

- **models.py**: This file will define the data models for Journal and Self-Development using Python classes. These models will be used by SQLAlchemy (a Python SQL Toolkit and Object-Relational Mapper) for interacting with the database.

**Database Structure:**

- Journal Table: id (Primary Key), date, domain, sentiment, description
- SelfDevelopment Table: id (Primary Key), date, domain, topic, time_spent, description

**Use Cases:**

1. **Create Journal Entry**: User navigates to Journal screen, selects a date, domain, sentiment, and enters a description. On submit, a new entry is created in the Journal table.

2. **Create Self-Development Entry**: User navigates to Self-Development screen, selects a date, domain, topic, time spent, and enters a description. On submit, a new entry is created in the Self-Development table.

3. **View Summary**: User navigates to Summary screen. The app fetches data from Journal and Self-Development tables and presents it in an easy-to-understand format.

4. **Add New Domain/Topic**: User clicks on "add new" in the domain/topic selection. A prompt appears to enter the new domain/topic. The new domain/topic is added to the respective selection for future entries. 

Remember to keep in mind the business requirements and the overall aim of the application while designing the solution. Ask for more details if required to ensure a user-friendly and efficient application.